language: python
dist: trusty
addons:
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable
before_install:
  - wget "http://chromedriver.storage.googleapis.com/2.37/chromedriver_linux64.zip"
  - unzip chromedriver_linux64.zip
  - sudo mv chromedriver /usr/local/bin
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
install:
  # Python requirements
  - pip install -r requirements.txt
  # Java 8 installation grrr
  - sudo apt-get install -y python-software-properties debconf-utils
  - sudo add-apt-repository -y ppa:webupd8team/java
  - sudo apt-get update
  - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
  - sudo apt-get install -y oracle-java8-installer
  - sudo apt install oracle-java8-set-default
  # Jenkins installation
  - wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
  - sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  - sudo apt-get update
  - sudo apt-get install -y jenkins
  - sudo apt-get install -y git-core
  - sudo service jenkins restart
  - sleep 20
  - curl -v http://localhost:8080
  - while [[ ! -f /var/lib/jenkins/config.xml ]]; do sleep 2; done;
  - sudo -u jenkins sed -i "s@<useSecurity>true<\/useSecurity>@<useSecurity>false<\/useSecurity>@g" /var/lib/jenkins/config.xml
  # enable JNLP port, see https://github.com/aespinosa/docker-jenkins/issues/24
  - sudo -u jenkins sed -i "s@<slaveAgentPort>.*@<slaveAgentPort>49153</slaveAgentPort>@g" /var/lib/jenkins/config.xml
  # - cat /var/lib/jenkins/config.xml
  - sudo -u jenkins cp /var/lib/jenkins/jenkins.install.UpgradeWizard.state /var/lib/jenkins/jenkins.install.InstallUtil.lastExecVersion
  - sudo service jenkins restart
  - sleep 15
  - sudo service jenkins status
  - ps ax | grep java
  - wget http://localhost:8080
  - while [[ $(curl -s -w "%{http_code}" http://localhost:8080 -o /dev/null) != "200" ]]; do  sleep 5 && echo "."; done;
  - sudo wget http://localhost:8080/jnlpJars/jenkins-cli.jar
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin git
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin checkstyle
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-aggregator
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-api
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-basic-steps
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-cps
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-cps-global-lib
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-durable-task-step
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-job
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-scm-step
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-step-api
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-support
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin pipeline-stage-view
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin jquery-detached # pipeline-stage-view dep
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin momentjs # pipeline-stage-view dep
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin handlebars # pipeline-stage-view dep
  - java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin pipeline-rest-api # pipeline-stage-view dep
  - sudo service jenkins restart
  - sleep 10
  - while [[ $(curl -s -w "%{http_code}" http://localhost:8080 -o /dev/null) != "200" ]]; do  sleep 5; done;
  - java -jar jenkins-cli.jar -s http://localhost:8080 create-job pipeline < pipeline.xml
script:
  - pybot test.robot
notifications:
  email:
  - stollenwerk@kitconcept.com
